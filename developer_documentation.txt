How to obtain the source code：
We will provide an address to download the code (the address of a repo on GitHub). Users only need to clone this repo on their local computer to complete the download.

The layout of your directory structure：
Our software consists of three main parts:
1. Game ontology file (game. Exe)
2. Resource files (mainly storing sounds and icons in the game)
3. Rules of the game (instructions)

How to build the software：
The battlefield map is generated by calling the "area_conflict (area1, area2), expand_battle_field(), and draw_battle_field()" functions.
Call the "produce_enemy (time)" function to automatically produce enemies.
Define the "armoredcar()" class, which is used to specify the basic characteristics of tanks in the game (moving mode, firing mode, etc.).
Define "tank (armoredcar) and enemy (armoredcar)" (subclass of armoredcar ()) to generate a tank on both sides.
Define the "mission()" class to determine the basic characteristics of bullets, and determine the firing mode and bone characteristics of the enemy and us in the game by defining the "tankmission() and enemymission()" subclasses.

How to test the software：


3.Developer documentationHow to add new tests：
Add the corresponding function directly in the middle note and call it directly in the main function. If you need to add the related content in the file and resource. After compiling, start the game test.

How to build a release of the software：
At present, our game is in version 1.0. If new modules are added later (major changes, such as a new weapon system), our game will be upgraded to version 2.0, and so on. If only some changes are made to existing modules, upgrade to version 1.1, and so on. After completing the update, developers will focus on testing whether the changed content works normally and whether it affects the normal work of other modules.